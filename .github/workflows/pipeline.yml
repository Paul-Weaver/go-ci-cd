name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  lint:
    name: Lint Go Code
    runs-on: ubuntu-latest
    steps:
    # Checks out your repository under $GITHUB_WORKSPACE
    - uses: actions/checkout@v2
    # Sets up Go 1.17 environment
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    # Installs golangci-lint for linting the Go code
    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.26.0
    # Runs golangci-lint
    - name: Lint
      run: golangci-lint run

  test:
    name: Test Across Matrix
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        go-version: [1.14.x, 1.15.x, 1.17.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    # Sets up Go environment based on the version
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    # Checks out your repository under $GITHUB_WORKSPACE
    - name: Checkout code
      uses: actions/checkout@v2
    # Runs Go tests
    - name: Test
      run: go test ./...

  build-and-publish:
    name: Build and Publish Docker Image
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    # Checks out your repository under $GITHUB_WORKSPACE
    - uses: actions/checkout@v3
    # Sets up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    # Builds the Docker image
    - name: Build the Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: paulweaver101/ci-cd:$(date +%s)
    # Scans the Docker image for vulnerabilities
    - name: Scan image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'paulweaver101/ci-cd:$(date +%s)'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
    # Uploads the Trivy scan results to GitHub
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
    # Publishes the Docker image to DockerHub
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v4
      with:
        name: paulweaver101/ci-cd
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
